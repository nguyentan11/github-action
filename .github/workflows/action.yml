name: terraform-deploy
run-name: ${{ github.actor }} is deploying terraform infrastructure
on:
  push:
    branches: [ test ] 
  workflow_dispatch:
jobs:
  terraform-test:
    name: Deploy TF
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
    - uses: actions/checkout@v3
      with:
        repository: nguyentan11/github-action
        ref: 'test' 
    - name: Install Ansible
      run: |
        sudo apt-get update -y
        sudo apt install software-properties-common -y
        sudo add-apt-repository --yes --update ppa:ansible/ansible
        sudo apt install ansible -y
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        repository: nguyentan11/fsoft-lab1
        ref: 'test'
    - name: Specific terraform version
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.9
        terraform_wrapper: false
    - name: Init TF
      run: terraform init
    - name: Apply TF
      run: terraform apply -auto-approve
    - name: Set private key
      run: |
        linux_private_key_pem=$(terraform output linux_private_key_pem)
        echo "GITHUB_KEY=$(echo $linux_private_key_pem)" >> $GITHUB_ENV
    - name: Test SSH
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        echo $GITHUB_ENV > ~/.ssh/li_private_key
        chmod 600 ~/.ssh/li_private_key
        tempip=$(terraform output linux_public_ip)
        linuxip=`echo $tempip | sed 's/"//g'`
        ssh -i ~/.ssh/li_private_key ec2-user@$linuxip
    - name: Destroy TF
      if: always()
      run: terraform destroy -auto-approve



