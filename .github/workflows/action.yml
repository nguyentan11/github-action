name: terraform-deploy
run-name: ${{ github.actor }} is deploying terraform infrastructure
on:
  push:
    branches:
      - test

jobs:
  terraform-test:
    name: Deploy TF
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        repository: nguyentan11/fsoft-lab1
        ref: 'test' 
    - name: Specific terraform version
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.9
        terraform_wrapper: false
    - name: Initial TF
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: terraform init
    - name: Plan tf
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: terraform plan -lock=false -input=false
    - name: Apply tf
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: terraform apply -auto-approve -lock=false -input=false
    - name: Call terraform output
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        linux_private_ip=$(terraform output linux_private_ip)
        echo $linux_private_ip
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup remote
      run: |
        echo "$SSH_PUBLIC_KEY" | sudo tee /etc/ssh/authorized_keys
        sudo tee /etc/ssh/sshd_config <<EOF
        PasswordAuthentication no
        PubkeyAuthentication yes
        AuthorizedKeysFile /etc/ssh/authorized_keys
        PermitRootLogin no
        Subsystem sftp /usr/lib/openssh/sftp-server
        EOF
        sudo systemctl restart sshd
        echo 'SSH_KNOWN_HOSTS<<EOF' >> $GITHUB_ENV
        echo $(ssh-keyscan localhost) >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
    - name: With everything
      uses: ./
      with:
        playbook: li-nrplaybook.yml
        directory: test
        inventory: |
          [all]
          $(terraform output linux_private_ip) $(terraform output linux_private_key_pem) 
    - name: destroy tf
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: terraform destroy -auto-approve -lock=false

