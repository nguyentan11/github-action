name: terraform-deploy
run-name: ${{ github.actor }} is deploying terraform infrastructure
on:
  push:
    branches: [ test ] 
  workflow_dispatch:
jobs:
  terraform-test:
    name: Deploy TF
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
    - uses: actions/checkout@v3
      with:
        repository: nguyentan11/github-action
        ref: 'test' 
    - name: Install Ansible
      run: |
        sudo apt-get update
        sudo apt install software-properties-common
        sudo add-apt-repository --yes --update ppa:ansible/ansible
        sudo apt install ansible
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        repository: nguyentan11/fsoft-lab1
        ref: 'test'
    - name: Specific terraform version
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.9
        terraform_wrapper: false
    - name: Initial TF
      run: terraform init
    - name: Plan TF
      run: terraform plan -lock=false
    - name: Apply TF
      run: terraform apply -auto-approve -lock=false
    - name: Create Ansible inventory
      run: |
        export ANSIBLE_HOST_KEY_CHECKING=False
        linux_public_key=$(terraform output linux_public_key)
        echo $linux_public_key 
        linux_private_key_pem=$(terraform output linux_private_key_pem)
        echo $linux_private_key_pem
        linuxip=$(terraform output linux_public_ip)
        echo $linuxip
        echo $linux_private_key_pem > li-private-key.pem

    - name: Destroy TF
      run: terraform destroy -auto-approve -lock=false
